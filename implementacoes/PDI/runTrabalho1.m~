close all; clear; clc; addpath('../img/');

% coins
% hubble
% bandeiras
% letras
% quadrinhos
% lenna
% girafa
% moedas
% - 'replicate' or 0


%% Filtro da Média
% Kernels de vários tamanhos
% img = imread('quadrinho3.jpg');
% img = rgb2gray(img);
% subplot(2, 3, 1)
% imshow(img)
% j = 2 ;
% for i = [5 15 25 35 45]
%     mask = fspecial('average', i);
%     h = imfilter(img,mask);
%     subplot(2, 3, j)
%     imshow(h)
%     j = j + 1;
% end
% figure

% Filtro da Média aplicado várias vezes
% img = imread('quadrinho3.jpg');
% img = rgb2gray(img);
% mask = fspecial('average', 5);
% subplot(2, 3, 1)
% imshow(img)
% j = 2;
% for i = 1 : 25
%     img = imfilter(img,mask);
%     if mod(i, 5) == 0
%         subplot(2, 3, j)
%         imshow(img)
%         j = j + 1;
%     end    
% end


% Comparacao entre filtro da media aritmética e ponderada
% img = imread('alfabet.jpg');
% num = 99;
% 
% mask = fspecial('average', 3);
% imgF = imfilter(img,mask);
% for i = 1 : num
%     imgF = imfilter(imgF,mask);
% end
% subplot(1, 2, 1)
% imshow(imgF)
% 
% mask = [1 2 1; 2 4 2; 1 2 1]/16;
% imgF2 = imfilter(img,mask);
% for i = 1 : num
%     imgF2 = imfilter(imgF2,mask);
% end
% subplot(1, 2, 2)
% imshow(imgF2)
% figure, imhist(imgF), figure, imhist(imgF2)


% Média com Limiarização
% img = imread('texto_quadrinho3.jpg');
% img = rgb2gray(img);
% 
% mask = fspecial('average', 9);
% imgF = imfilter(img,mask, 'replicate');
% imgT = thresholding(imgF, 200);
% 
% [labelComp totalComp] = bwlabel(imgT);
% imshow(img), figure, imshow(imgT)



%% Filtro da Mediana
% Comparacao entre filtro da media da mediana (ruído sal e pimenta)
% I = imread('coins.png');
% img = imnoise(I,'salt & pepper', 0.02);
% 
% mask = fspecial2('average', 3);
% imgA = imfilter2(img,mask);
% 
% imgM = medianFilt(img,3);
% 
% subplot(1, 3, 1)
% imshow(I)
% subplot(1, 3, 2)
% imshow(imgA)
% subplot(1, 3, 3)
% imshow(imgM)


% Kernels de vários tamanhos
% img = imread('couple.png');
% img = rgb2gray(img);
% 
% imshow(img);
% for i = [3 5 15 25]
%     imgM = medianFilt(img,i);
%     figure, imshow(imgM);
% end


% Filtro da Mediana aplicado várias vezes
img = imread('couple.png');
img = rgb2gray(img);

imshow(img);
for i = 1 : 10
    
    if ()
    img = medianFilt(img,3);
    figure, imshow(img);
end


%% Filtro Gaussiano
% Variando o sigma

% Kernels de vários tamanhos

% Filtro Gaussiano aplicado várias vezes

% Comparando com o da média



%% Laplaciano
% Diferença entre as duas máscaras

% Filtro Laplaciano aplicado várias vezes



%% Prewitt
% Compara o gradiente da direção x, y e a magnitude

% Compara as 2 maneiras de calcular a magnitude da imagem anterior

% Diferença diferença nas duas maneiras de calcular o Prewitt


%% Sobel
% Compara o gradiente da direção x, y e a magnitude (mesma imagem do
% Prewitt)

% Bordas em 45º

% Filtro da Média antes de detectar borda

% Sobel com Limiarização

% Compara Laplaciano, Prewitt e Sobel


%% Equalização de histograma
% arroz menina seeds


%moedas
%% Limiarização
% Limiares fixos


% Limiares automáticos
%125 fingerprint

%% Multilimiarização
%[84 124] ice - melhor rgb
%[49 140] alemanha
%[0.4 0.59] floresta - melhor hsv

